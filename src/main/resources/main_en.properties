title=Neural Style GUI

neuralPathHint=Path to neural_style.lua or neural_style.py

runnerPathTooltip=Depending on which neural-style you are using, either a path to th or python
runnerPathHint=Path to th or python

saveStyleButton=Save
saveStyleChooser=Save neural-style parameters
saveStyleSuccess=Saved!
saveStyleFailed=Failed to save neural-style, please check the log.
loadStyleButton=Load
loadStyleChooser=Load neural-style parameters
loadStyleSuccess=Loaded!
loadStyleFailed=Failed to load neural-style, please check the log.

queueButton=Queue
queueButtonHit=Queued Current Parameters
startButton=Start
stopButton=Stop
commandButton=Command
commandButtonInvalid=Settings are invalid, cannot copy.
neuralServiceStatus=Initialized
neuralServiceStatusScheduled=Scheduled
neuralServiceStatusReady=Ready to Run
neuralServiceStatusRunning=Running
neuralServiceStatusFinished=Finished
neuralServiceStatusCancelled=Cancelled
neuralServiceStatusFailed=Failed

neuralQueueItemInvalidFile=Invalid File
neuralQueueItemInvalidArguments=Invalid Settings
neuralQueueItemQueued=Queued
neuralQueueItemInProgress=In Progress
neuralQueueItemCancelled=Cancelled
neuralQueueItemFailed=Failed
neuralQueueItemFinished=Finished
neuralQueueItemParent=

neuralQueueItemCancel=Cancel

inputTab=Inputs
layersTab=Layers
outputTab=Output
neuralLogTab=Neural Style Log

styleFolderButton=Styles
styleFolderChooser=Open Style Images Folder
styleMultipleSelect=Multiple
contentFolderButton=Content
contentFolderChooser=Open Content Images Folder

styleImageListTooltip=Select style images by checking the 'Selected' checkbox, and optionally modify their weights.
contentImageListTooltip=Select a content image by highlighting it.

styleLayers=Style Layers
styleLayersTableTooltip=Select style layers by checking the 'Selected' checkbox. From the lower layers going upwards, they seem to recognize colors, lines, shapes, then more complex features.
contentLayers=Content Layers
contentLayersTableTooltip=Select content layers by checking the 'Selected' checkbox. From the lower layers going upwards, they seem to recognize colors, lines, shapes, then more complex features.
layersColumnSelected=Selected
layersColumnName=Layer Name
layersAddButton=Add
layersRemoveButton=Remove

imageAs=Use as:
imageAsStyle=Style
imageAsContent=Content
imageAsInit=Initialization Image

imageViewModeFit=Fit to View
imageViewModeActual=Actual Size
outputFolderHint=Folder for Saved Images
outputImageButton=Save Image
outputImageHint=Saved Image Filename (without extension)
outputImageNoOutputFolder=Unable to save the image without an output folder.
outputImageNullIterations=Unable to check for image iterations.
outputImageNoIterations=No image iterations.
outputImageSavedImage=Saved image as:
outputImageNoSavedImage=Exception saving the image, please check the log.
workingFolderHint=Folder for Temporary Images

outputTreeTableButton=Action
outputTreeTableLoadButtonText=Load
outputTreeTableInitButtonText=Initialize
outputTreeTableInitTooltip=Initialized with previous image.
outputTreeTableName=Name
outputTreeTableIteration=Status

vramLabel=vRAM:

simpleTab=Simple
advancedTab=Advanced
fileTab=Files

itersLabel=Iterations
itersPrintTooltip=How many iterations to go before updating the log and status bar. Set to 0 to disable printing/progress.
itersSaveTooltip=How many iterations to go before updating the image. Set to 0 to disable saving intermediate results.
itersMaxTooltip=How many iterations until the image is complete.
seedTooltip=Seeding the process ensures the same output assuming no other settings change. Set to -1 for unique seeds.

sizeLabel=Size
sizeOutputTooltip=How large the output image will be. Larger values take longer to process and can result in out-of-memory errors.
sizeStyleTooltip=Scale at which to extract features from the style image. For example, larger numbers will result in a larger 'tiling' effect.

styleLabel=Styling
weightContentTooltip=How much to weight the content reconstruction term. Default is 5e0.
weightStyleTooltip=How much to weight the style reconstruction term. Default is 1e2.
weightTvTooltip=Larger values have a smoothing effect. Default is 1e-3. Set to 0 to disable TV regularization.

initTooltip=Method for generating the generated image; Random uses a noise initialization as in the paper; image initializes with the content or provided image.
initImageHint=Initialization Image
initImageTooltip=If provided, the network will be initialized with this image instead of the content image.
initImageChooser=Open initialization image
poolingTooltip=The VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average pooling layers can improve the results. Tweaking of weight parameters is recommended and sometimes necessary for avg.
originalColorsTooltip=Whether the output image will keep the colors of the content image.
normalizeGradientsTooltip=Whether the style and content gradients from each layer will be L1 normalized. For neural-style-pt, this normalizes the Weights instead.

processorLabel=Processor
cpuTooltip=Check to use the CPU
gpuTooltip=Zero-indexed ID(s) of the GPU to use
gpuColumnSelected=Selected
gpuColumnIndex=GPU Index
multiGpuSplitTooltip=Index of layers to split the network across GPUs (e.g. '3,6,12' means that the first two layers are on GPU 0, 3 to 5 are on GPU 1, 6 to 11 are on GPU 2, and the rest are on GPU 3)

backendLabel=Backend
backendTooltip=cudnn requires cudnn.torch and may reduce memory usage. clnn requires cltorch and clnn. Some of these options are specific to the neural-style version you are using.
optimizerTooltip=L-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage; when using ADAM you will probably need to play with other parameters to get good results, especially the style weight, content weight, and learning rate; you may also want to normalize gradients when using ADAM.
nCorrectionTooltip=Applicable for L-BFGS optimizer, but has minimal effect. Default is technically 100. -1 will not modify it.
learningRateTooltip=Learning rate to use with the ADAM optimizer. Default is 1e1.
autotuneTooltip=When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select the best convolution algorithms for your architecture. This will make the first iteration a bit slower and can take a bit more memory, but may significantly speed up the cuDNN backend.

modelLabel=Model
protoFileButton=Proto File
protoFilePathHint=Path to the deploy.txt
protoFileChooser=Open Model's deploy.txt
protoFileInvalid=Unable to parse proto file, it's probably invalid for use.
protoFileNoLayers=No ReLU layers in proto file.
protoFileNewLayers=Style/Content Layers updated, please check selections.
modelFileButton=Model File
modelFilePathHint=Path to the .caffemodel
modelFileChooser=Open Model's .caffemodel

chainLengthTooltip=How many Neural Style instances to run in series. The actual values below are the LAST run's values, and the ratio adjusts the value for each PREVIOUS run.
