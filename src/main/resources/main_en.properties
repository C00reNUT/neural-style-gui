title=Neural Style GUI

neuralPathButton=Neural-Style
neuralPathHint=Path to the neural-style folder
neuralPathChooser=Open neural-style folder

saveStyleButton=Save
saveStyleChooser=Save neural-style parameters
saveStyleSuccess=Saved!
saveStyleFailed=Failed to save neural-style, please check the log.
loadStyleButton=Load
loadStyleChooser=Load neural-style parameters
loadStyleSuccess=Loaded!
loadStyleFailed=Failed to load neural-style, please check the log.

queueButton=Queue
startButton=Start
stopButton=Stop
commandButton=Copy Command
commandButtonInvalid=Settings are invalid, cannot copy.
neuralServiceStatus=Initialized
neuralServiceStatusScheduled=Scheduled
neuralServiceStatusReady=Ready to Run
neuralServiceStatusRunning=Running
neuralServiceStatusFinished=Finished
neuralServiceStatusCancelled=Cancelled
neuralServiceStatusFailed=Failed

neuralQueueItemInvalidFile=Invalid File
neuralQueueItemInvalidArguments=Invalid Settings
neuralQueueItemQueued=Queued
neuralQueueItemInProgress=In Progress
neuralQueueItemCancelled=Cancelled
neuralQueueItemFailed=Failed
neuralQueueItemFinished=Finished

inputTab=Inputs
layersTab=Layers
outputTab=Output
neuralLogTab=Neural Style Log

styleFolderButton=Style Folder
styleFolderChooser=Open Style Images Folder
styleMultipleSelect=Multiple Selections
contentFolderButton=Content Folder
contentFolderChooser=Open Content Images Folder

styleImageListTooltip=Select style images by checking the 'Selected' checkbox, and optionally modify their weights.
contentImageListTooltip=Select a content image by highlighting it.

styleLayers=Style Layers
styleLayersTableTooltip=Select style layers by checking the 'Selected' checkbox. From the lower layers going upwards, they seem to recognize colors, lines, shapes, then more complex features.
contentLayers=Content Layers
contentLayersTableTooltip=Select content layers by checking the 'Selected' checkbox. From the lower layers going upwards, they seem to recognize colors, lines, shapes, then more complex features.
layersColumnSelected=Selected
layersColumnName=Layer Name
layersAddButton=Add
layersRemoveButton=Remove

imageViewModeFit=Fit to View
imageViewModeActual=Actual Size
outputFolderButton=Output Folder
outputFolderChooser=Select Output Folder
outputImageButton=Save Image
outputImageHint=Saved Image Filename (without extension)
outputImageNoOutputFolder=Unable to save the image without an output folder.
outputImageNullIterations=Unable to check for image iterations.
outputImageNoIterations=No image iterations.
outputImageSavedImage=Saved image as:
outputImageNoSavedImage=Exception saving the image, please check the log.

outputTreeTableButton=Action
outputTreeTableLoadButtonText=Load
outputTreeTableInitButtonText=Initialize
outputTreeTableInitTooltip=Initialized with previous image.
outputTreeTableName=Name
outputTreeTableIteration=Status

vramLabel=vRAM:

simpleTab=Simple
advancedTab=Advanced

itersLabel=Iterations
itersPrintLabel=Progress Update
itersPrintTooltip=How many iterations to go before updating the log and status bar. Set to 0 to disable printing/progress.
itersSaveLabel=Image Update
itersSaveTooltip=How many iterations to go before updating the image. Set to 0 to disable saving intermediate results.
itersMaxLabel=Final Iterations
itersMaxTooltip=How many iterations until the image is complete.
seedLabel=Seed
seedTooltip=Seeding the process ensures the same output assuming no other settings change. Set to -1 for unique seeds.

sizeLabel=Size
sizeOutputLabel=Output (px)
sizeOutputTooltip=How large the output image will be. Larger values take longer to process and can result in out-of-memory errors.
sizeStyleLabel=Style Scale
sizeStyleTooltip=Scale at which to extract features from the style image. For example, larger numbers will result in a larger 'tiling' effect.

styleLabel=Styling
weightContentLabel=Content Weight
weightContentTooltip=How much to weight the content reconstruction term. Default is 5e0.
weightStyleLabel=Style Weight
weightStyleTooltip=How much to weight the style reconstruction term. Default is 1e2.
weightTvLabel=TV Weight
weightTvTooltip=Larger values have a smoothing effect. Default is 1e-3. Set to 0 to disable TV regularization.

initLabel=Initialize
initTooltip=Method for generating the generated image; Random uses a noise initialization as in the paper; image initializes with the content or provided image.
initImageLabel=Init. Image
initImageHint=Initialization Image
initImageTooltip=If provided, the network will be initialized with this image instead of the content image.
initImageChooser=Open initialization image
poolingLabel=Pooling
poolingTooltip=The VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average pooling layers can improve the results. Tweaking of weight parameters is recommended and sometimes necessary for avg.
originalColorsLabel=Content Colors
originalColorsTooltip=Whether the output image will keep the colors of the content image.
normalizeGradientsLabel=Normalize Gradients
normalizeGradientsTooltip=Whether the style and content gradients from each layer will be L1 normalized.

backendLabel=Backend
backendTooltip=cudnn requires cudnn.torch and may reduce memory usage. clnn requires cltorch and clnn
cpuLabel=CPU
cpuTooltip=Check to use the CPU
gpuLabel=GPU
gpuTooltip=Zero-indexed ID(s) of the GPU to use
gpuColumnSelected=Selected
gpuColumnIndex=GPU Index
multiGpuSplitLabel=GPU Split
multiGpuSplitTooltip=Index of layers to split the network across GPUs (e.g. '3,6,12' means that the first two layers are on GPU 0, 3 to 5 are on GPU 1, 6 to 11 are on GPU 2, and the rest are on GPU 3)
optimizerLabel=Optimizer
optimizerTooltip=L-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage; when using ADAM you will probably need to play with other parameters to get good results, especially the style weight, content weight, and learning rate; you may also want to normalize gradients when using ADAM.
nCorrectionLabel=nCorrection
nCorrectionTooltip=Applicable for L-BFGS optimizer, but has minimal effect. Default is technically 100. -1 will not modify it.
learningRateLabel=Learning Rate
learningRateTooltip=Learning rate to use with the ADAM optimizer. Default is 1e1.
autotuneLabel=cuDNN Autotune
autotuneTooltip=When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select the best convolution algorithms for your architecture. This will make the first iteration a bit slower and can take a bit more memory, but may significantly speed up the cuDNN backend.

modelLabel=Model
protoFileButton=Proto File
protoFilePathHint=Path to the deploy.txt
protoFileChooser=Open Model's deploy.txt
protoFileInvalid=Unable to parse proto file, it's probably invalid for use.
protoFileNoLayers=No ReLU layers in proto file.
protoFileNewLayers=Style/Content Layers updated, please check selections.
modelFileButton=Model File
modelFilePathHint=Path to the .caffemodel
modelFileChooser=Open Model's .caffemodel

chainLabel=Chaining
chainLengthLabel=Length
chainLengthTooltip=How many Neural Style instances to run in series
chainIterationRatioLabel=Iteration Ratio
chainIterationRatioTooltip=How to scale the Iterations value for each run. For example: given a Final Iterations of 400, a length of 3, and a ratio of 0.5, the last run would go for 400 iterations, the middle run would go for 200 iterations, and the first run would go for 100 iterations.
chainSizeRatioLabel=Size Ratio
chainSizeRatioTooltip=How to scale the Size value for each run. For example: given a Size of 1200, a length of 4, and a ratio of 0.75, the final size would be 1200, the third size would be 900, the second run would be 675, and the first run would be 506.